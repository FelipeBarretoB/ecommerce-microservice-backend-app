# .github/workflows/build-and-release.yml
name: Build and Release Microservices

on:
  push:
    branches:
      - master
      - develop
    paths:
      - 'api-gateway/**'
      - 'user-service/**'
      - 'product-service/**'
      - 'favourite-service/**'
      - 'order-service/**'
      - 'shipping-service/**'
      - 'payment-service/**'
      - 'proxy-client/**'
  pull_request:
    branches:
      - develop
    paths:
      - 'api-gateway/**'
      - 'user-service/**'
      - 'product-service/**'
      - 'favourite-service/**'
      - 'order-service/**'
      - 'shipping-service/**'
      - 'payment-service/**'
      - 'proxy-client/**'
  workflow_dispatch:
    inputs:
      service:
        description: 'Microservice to build (leave empty to use matrix)'
        required: false
        type: choice
        options:
          - api-gateway
          - user-service
          - product-service
          - favourite-service
          - order-service
          - shipping-service
          - payment-service
          - proxy-client

env:
  REGISTRY: pipebarreto
  JENKINS_URL: ${{ secrets.JENKINS_URL }}
  JENKINS_USER: ${{ secrets.JENKINS_USER }}
  JENKINS_TOKEN: ${{ secrets.JENKINS_TOKEN }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - api-gateway
          - user-service
          - product-service
          - favourite-service
          - order-service
          - shipping-service
          - payment-service
          - proxy-client
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changes in ${{ matrix.service }}
        id: changes
        run: |
          git fetch origin master
          if git diff --name-only origin/master...HEAD | grep "^${{ matrix.service }}/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up JDK 11
        if: steps.changes.outputs.changed == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Get Maven version
        if: steps.changes.outputs.changed == 'true'
        id: mvnver
        run: echo "VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        if: steps.changes.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        if: steps.changes.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Clean, build and push Docker image
        if: steps.changes.outputs.changed == 'true'
        run: |
          cd ${{ matrix.service }}
          ./mvnw clean package
          docker build -t $REGISTRY/${{ matrix.service }}:${{ steps.mvnver.outputs.VERSION }} -f Dockerfile .
          docker push $REGISTRY/${{ matrix.service }}:${{ steps.mvnver.outputs.VERSION }}
          cd ..

      - name: Trigger Jenkins updatemanifest job
        if: steps.changes.outputs.changed == 'true'
        run: |
          curl -X POST "${JENKINS_URL}/job/updatemanifest/buildWithParameters" \
            --user "${JENKINS_USER}:${JENKINS_TOKEN}" \
            --data-urlencode "DOCKERTAG=${{ steps.mvnver.outputs.VERSION }}" \
            --data-urlencode "NAME=${{ matrix.service }}"